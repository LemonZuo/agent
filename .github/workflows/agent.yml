name: Build + Release

on:
  push:
    tags:
      - "v*"
    branches:
      - main
    paths-ignore:
      - ".github/workflows/agent.yml"
      - ".github/workflows/codeql-analysis.yml"
      - ".github/workflows/test.yml"
      - ".github/workflows/contributors.yml"
      - "README.md"
      - ".goreleaser.yml"
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  get-latest-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}
      previous_tag: ${{ steps.get-previous-tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: get-tag
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            # 如果是push触发，使用触发的tag
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            # 如果是手动触发，获取分支上最新的tag
            LATEST_TAG=$(git describe --tags --abbrev=0)
            echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          fi
      - id: get-previous-tag
        run: |
          CURRENT_TAG=${{ steps.get-tag.outputs.tag }}
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 "${CURRENT_TAG}^" || echo '')
          echo "tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT

  build:
    strategy:
      fail-fast: true
      matrix:
        goos: [linux, windows, darwin, freebsd]
        goarch: [amd64, arm64, 386]
        include:
          - goos: linux
            goarch: 386
          - goos: linux
            goarch: s390x
          - goos: linux
            goarch: riscv64
          - goos: linux
            goarch: arm
          - goos: linux
            goarch: mips
            gomips: softfloat
          - goos: linux
            goarch: mipsle
            gomips: softfloat
          - goos: freebsd
            goarch: arm
        exclude:
          - goos: darwin
            goarch: 386

    name: Build artifacts
    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOMIPS: ${{ matrix.gomips }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.20.14"

      - name: Build Test
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: build --single-target --clean --skip=validate --snapshot

      - name: Build
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: build --single-target --clean --skip=validate

      - name: Archive
        run: zip -jr dist/nezha-agent_${GOOS}_${GOARCH}.zip dist/*/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nezha-agent_${{ env.GOOS }}_${{ env.GOARCH }}
          path: |
            ./dist/nezha-agent_${{ env.GOOS }}_${{ env.GOARCH }}.zip

  release:
    runs-on: ubuntu-latest
    needs: [get-latest-tag, build]
    name: Release
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./assets

      - name: Checksum
        run: sha256sum ./assets/*/*.zip | awk -F" |/" '{print $1, $NF}' > checksums.txt

      - name: Generate Release Body
        id: release_body
        run: |
          CURRENT_TAG=${{ needs.get-latest-tag.outputs.tag }}
          PREVIOUS_TAG=${{ needs.get-latest-tag.outputs.previous_tag }}
          echo "# What's Changed" > release_body.md
          echo "" >> release_body.md
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "Full Changelog: [$PREVIOUS_TAG...$CURRENT_TAG](https://github.com/${{ github.repository }}/compare/$PREVIOUS_TAG...$CURRENT_TAG)" >> release_body.md
          else
            echo "First Release" >> release_body.md
          fi
          echo "" >> release_body.md
          echo "## Changelog" >> release_body.md
          git log --pretty=format:"* %s" $PREVIOUS_TAG..$CURRENT_TAG >> release_body.md

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.get-latest-tag.outputs.tag }}
          artifacts: "checksums.txt,assets/*/*.zip"
          allowUpdates: true
          makeLatest: true
          replacesArtifacts: true
          generateReleaseNotes: true
          bodyFile: release_body.md
